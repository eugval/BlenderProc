# Args: <path_to_shapenet_data> <path_to_cc_textures> <output_dir>
{
  "version": 3,
  "setup": {
    "blender_install_path": "/home_local/<env:USER>/Projects/dependencies/blender/",
    "pip": [
      "h5py",
      "scikit-image",
      "pypng==0.0.20",
      "scipy==1.2.2",
      "matplotlib==2.2.4",
      "pydevd-pycharm~=193.6911.25",
      "matplotlib",
    ]
  },
  "modules": [
    {
      "module": "main.Initializer",
      "config": {
        "global": {
          "output_dir": "<args:0>",
          "run_number":0
         # "sys_paths": ["<args:2>"]
        }
      }
    },
    {
      "module": "writer.FolderStructureWriter",
    },

    {
      "module": "loader.ShapeNetLoader",
      "config": {
        "data_path": "<args:1>",
        "used_synset_id": "03797390",
        "used_source_id": "",
        "add_properties": {
          "cp_physics": True,
          "cp_shapenet":True,
          "cp_background":"False"
        },
        "cf_set_shading": "SMOOTH"
      }
    },

#    {
#      "module": "loader.CCMaterialLoader",
#      "config": {
#        "folder_path": "<args:2>",
#        "preload": True
#      }
#    },
#    {
#      "module": "manipulators.EntityManipulator",
#      "config": {
#        "selector": {
#          "provider": "getter.Entity",
#          "conditions": {
#            "type": "MESH"
#          }
#        },
#        "cf_add_uv_mapping":{
#                "projection":"cube",
#                "forced_recalc_of_uv_maps": True
#        },
#        "cf_randomize_materials": {
#          "randomization_level": 1,
#          "materials_to_replace_with": {
#            "provider": "getter.Material",
#            "random_samples": 1,
#            "conditions": {
#              "cp_is_cc_texture": True  # this will return one random loaded cc textures
#            }
#          }
#        },
#      }
#    },
    {
      "module": "constructor.BasicMeshInitializer",
      "config": {
        "meshes_to_add": [
        {
          "type": "plane",
          "name": "ground_plane0",
          "scale": [2, 2, 1],
        },
        {
          "type": "plane",
          "name": "ground_plane1",
          "scale": [2, 2, 1],
          "location": [0, -2, 2],
          "rotation": [-1.570796, 0, 0], # switch the sign to turn the normals to the outside

        },
        {
          "type": "plane",
          "name": "ground_plane2",
          "scale": [2, 2, 1],
          "location": [0, 2, 2],
          "rotation": [1.570796, 0, 0],

        },
        {
          "type": "plane",
          "name": "ground_plane4",
          "scale": [2, 2, 1],
          "location": [2, 0, 2],
          "rotation": [0, -1.570796, 0],

        },
        {
          "type": "plane",
          "name": "ground_plane5",
          "scale": [2, 2, 1],
          "location": [-2, 0, 2],
          "rotation": [0, 1.570796, 0],

        },
        {
          "type": "plane",
          "name": "light_plane",
          "location": [0, 0, 10],
          "scale": [3, 3, 1],
        }
        ]
      }
    },
    {
      "module": "manipulators.EntityManipulator",
      "config": {
        "selector": {
          "provider": "getter.Entity",
          "conditions": {
            "name": '.*plane.*'
          }
        },
        "cp_physics": False,
        "cp_category_id": 333
        "cp_shapenet":False,
        "cp_background":"True"
      }
    },
    {
      "module": "manipulators.MaterialManipulator",
      "config": {
        "selector": {
          "provider": "getter.Material",
          "conditions": {
            "name": "light_plane_material"
          }
        },
        "cf_switch_to_emission_shader": {
          "color": {
            "provider": "sampler.Color",
            "min": [0.5, 0.5, 0.5, 1.0],
            "max": [1.0, 1.0, 1.0, 1.0]
          },
          "strength": {
            "provider": "sampler.Value",
            "type": "float",
            "min": 3,
            "max": 6
          }
        }
      }
    },
#    {
#      "module": "manipulators.EntityManipulator",
#      "config": {
#        "selector": {
#          "provider": "getter.Entity",
#          "conditions": {
#            "name": "ground_plane.*"
#          }
#        },
#        "mode": "once_for_each",
#        "cf_randomize_materials": {
#          "randomization_level": 1,
#          "materials_to_replace_with": {
#            "provider": "getter.Material",
#            "random_samples": 1,
#            "conditions": {
#              "cp_is_cc_texture": True
#            }
#          }
#        }
#      }
#    },
    {
      "module": "object.OnSurfaceSampler",
      "config": {
        "objects_to_sample": {
          "provider": "getter.Entity",
          "conditions": {
            "cp_physics": True
          }
        },
        "surface": {
          "provider": "getter.Entity",
          "index": 0,
          "conditions": {
            "name": "ground_plane0"
          }
        },
        "pos_sampler": {
          "provider": "sampler.UpperRegionSampler",
          "to_sample_on": {
            "provider": "getter.Entity",
            "index": 0,
            "conditions": {
              "name": "ground_plane0"
            }
          },
          "min_height": 1,
          "max_height": 4,
          "face_sample_range": [0.4, 0.6],
          "use_ray_trace_check": False,
        },
        "min_distance": 0.01,
        "max_distance": 0.20,
        "rot_sampler": {
          "provider": "sampler.Uniform3d",
          "min": [0, 0, 0],
          "max": [0, 0, 6.28]
        }
      }
    },

#    {
#      "module": "loader.CCMaterialLoader",
#      "config": {
#        "folder_path": "<args:2>",
#        "fill_used_empty_materials": True
#      }
#    },

    {
      "module": "lighting.LightSampler",
      "config": {
        "lights": [
        {
          "location": {
            "provider": "sampler.Shell",
            "center": [0, 0, 0],
            "radius_min": 1, # now depends on the bottom area of the box
            "radius_max": 1.5, # this one too
            "elevation_min": 5,
            "elevation_max": 89,
            "uniform_elevation": True
          },
          "color": {
            "provider": "sampler.Color",
            "min": [0.5, 0.5, 0.5, 1.0],
            "max": [1.0, 1.0, 1.0, 1.0]
          },
          "type": "POINT",
          "energy": 200
        }
        ]
      }
    },
    {
      "module": "camera.CameraSampler",
      "config": {
        "cam_poses": [
        {
          "proximity_checks": {
            "min": 0.2
          },
          "excluded_objs_in_proximity_check":  {
            "provider": "getter.Entity",
            "conditions": {
              "name": "ground_plane.*",
              "type": "MESH"
            }
          },
          "number_of_samples": 1,
          "location": {
            "provider": "sampler.Shell",
            "center": [0, 0, 0],
            "radius_min": 0.2,
            "radius_max": 1.0,
            "elevation_min": 25,
            "elevation_max": 89,
            "uniform_elevation": True
          },
          "rotation": {
            "format": "look_at",
            "value": {
              "provider": "getter.POI",
              "selector": {
                "provider": "getter.Entity",
                "conditions": {
                  "type": "MESH",
                  "cp_shapenet":True

                },
                "random_samples":1
              }
            },
            "inplane_rot": {
              "provider": "sampler.Value",
              "type": "float",
              "min": -0.7854,
              "max": 0.7854
            }
          }
        }
        ]
      }
    },
    {
      "module": "renderer.RgbRenderer",
      "config": {
        "samples": 50,
        "render_distance": True,
        "image_type": "JPEG"
      }
    },
    {
      "module": "renderer.SegMapRenderer",
      "config": {
        "map_by": ["cp_background", "instance"]
      }
    },
    {
      "module": "writer.BopWriter",
      "config": {
        "dataset": "",
        "append_to_existing_output": True,
        "postprocessing_modules": {
          "distance": [
            {"module": "postprocessing.Dist2Depth"}
          ]
        }
      }
    }
  ]
}






#    {
#      "module": "manipulators.MaterialManipulator",
#      "config": {
#        "selector": {
#          "provider": "getter.Material",
#          "conditions": [
#          {
#            "name": ".*"
#          }
#          ]
#        },
#        "cf_set_base_color": {
#          "provider": "sampler.Color",
#          "grey": True,
#          "min": [0.25, 0.25, 0.25, 1],
#          "max": [1, 1, 1, 1]
#        },
#        "cf_set_specular": {
#          "provider": "sampler.Value",
#          "type": "float",
#          "min": 0.0,
#          "max": 1.0
#        },
#        "cf_set_roughness": {
#          "provider": "sampler.Value",
#          "type": "float",
#          "min": 0.0,
#          "max": 1.0
#        }
#      }
#    },